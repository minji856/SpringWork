<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd" >
   
   <context:component-scan base-package="com.maymin.member"></context:component-scan>
   
   <!-- API Doc에서 class 이름 복사 
   <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
   		 내가 만든 프로퍼티가 아니고 API에 있는 메서드들 
   		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></property> 
   		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"></property>
   		<property name="username" value="scott"></property>
   		<property name="password" value="1111"></property>
   </bean>
   -->
   
   <!-- 3CP0 DBCP
   <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method=”close”>
   		<property name="driverClass" value="oracle.jdbc.driver.OracleDriver"></property>
   		<property name="jdbcUrl" value="jdbc:oracle:thin:@localhost:1521:xe"></property>
   		<property name="user" value="scott"></property>
   		<property name="password" value="1111"></property>
   		<property name="initialPoolSize" value="5"></property>
   			최대 몇개 까지 성능에 따라서 조절 
   		<property name="maxPoolSize" value="30"></property>
   </bean>
    -->
   <!-- XML방식으로 바꿔줌
   		cpds.setDriverClass( "org.postgresql.Driver" ); //loads the jdbc driver            
		cpds.setJdbcUrl( "jdbc:postgresql://localhost/testdb" );
		cpds.setUser("dbuser");                                  
		cpds.setPassword("dbpassword"); -->
   
  	<!-- Apache
   <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" 
   			destroy-method="close">
   		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"></property>
   		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></property>
   		<property name="username" value="scott"></property>
   		<property name="password" value="1111"></property>
   		<property name="defaultAutoCommit" value="true"></property>
   		<property name="initialSize" value="5"></property>
   		<property name="maxIdle" value="5"></property> 연결이 되지 않은 상태에서도 항상 몇개를 만들지 
   </bean>
    -->
    
    <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
    	<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" ></property>
    	<property name="jdbcUrl" value="jdbc:oracle:thin:@localhost:1521:xe"></property>
    	<property name="username" value="scott"></property>
    	<property name="password" value="1111"></property>    
    </bean>
    
    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource">
    	<constructor-arg ref="hikariConfig" />
    </bean>
   
   <!-- JDBC Template -->
   <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
   		<!-- 전달받아야 실제 일을 할 수 있는거다 부모클래스에서 상속받은 setDatasource메서드-->
   		<property name="dataSource" ref="dataSource"></property>
   </bean>
</beans>